%%%-------------------------------------------------------------------
%%% File    : eunit_to_fsm.erl
%%% Author  : Pablo Lamela <lamela@student.chalmers.se>
%%% Description : Module to collect the main functions of the library
%%%
%%% Created : 11 Feb 2011 by Pablo Lamela
%%%-------------------------------------------------------------------
-module(eunit_to_fsm).

%% API
-export([erun/1,erun/2, qsm/1, visualize/1]).

%%====================================================================
%% API
%%====================================================================
%%--------------------------------------------------------------------
%% Function: erun(Filename, [Abstract])
%% Description: Tries to get the traces from the eUnit test file.
%%   A mapping function can be specified in the form:
%%     fun({Module, Function, Arguments}) -> _ end.
%%--------------------------------------------------------------------

erun(Filename) -> erun(Filename, fun({_,F,_}) -> F end).
erun(Filename, Abstract) ->
    {Pos, Neg} = static_parser:parse_file(Filename),
    {[[Abstract(E) || E <- Trace] || Trace <- Pos],
     [[Abstract(E) || E <- Trace] || Trace <- Neg]}.

%%====================================================================
%% API
%%====================================================================
%%--------------------------------------------------------------------
%% Function: qsm
%% Description: Takes traces as input and returns a fsm.
%%--------------------------------------------------------------------

qsm({Pos,Neg}) -> bluefringe:qsm(Pos, Neg).

%%====================================================================
%% API
%%====================================================================
%%--------------------------------------------------------------------
%% Function: visualize
%% Description: Shows a representation of a fsm generated by qsm.
%%--------------------------------------------------------------------

visualize(Automata) -> dot:visualize(Automata).
